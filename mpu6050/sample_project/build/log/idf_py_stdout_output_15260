[1/11] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D D:\work\PT01\code\git_pt01\ESP_IDF\examples\mpu6050\sample_project\build\bootloader\esp-idf\esptool_py && C:\Users\INNOTECH\.espressif\python_env\idf5.1_py3.10_env\Scripts\python.exe D:/work/PT01/code/git_pt01/ESP_IDF/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 D:/work/PT01/code/git_pt01/ESP_IDF/examples/mpu6050/sample_project/build/bootloader/bootloader.bin"
Bootloader binary size 0x51a0 bytes. 0x2e60 bytes (36%) free.
[2/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/innotech/mpu6050_driver/empl_driver.c.obj
[3/9] Linking C static library esp-idf\main\libmain.a
[4/9] Generating ld/sections.ld
[5/9] Building C object CMakeFiles/main.elf.dir/project_elf_src_esp32s3.c.obj
[6/9] Linking CXX executable main.elf
[7/9] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated D:/work/PT01/code/git_pt01/ESP_IDF/examples/mpu6050/sample_project/build/main.bin
[8/9] cmd.exe /C "cd /D D:\work\PT01\code\git_pt01\ESP_IDF\examples\mpu6050\sample_project\build\esp-idf\esptool_py && C:\Users\INNOTECH\.espressif\python_env\idf5.1_py3.10_env\Scripts\python.exe D:/work/PT01/code/git_pt01/ESP_IDF/components/partition_table/check_sizes.py --offset 0x8000 partition --type app D:/work/PT01/code/git_pt01/ESP_IDF/examples/mpu6050/sample_project/build/partition_table/partition-table.bin D:/work/PT01/code/git_pt01/ESP_IDF/examples/mpu6050/sample_project/build/main.bin"
main.bin binary size 0x3e230 bytes. Smallest app partition is 0x2ee000 bytes. 0x2afdd0 bytes (92%) free.
[8/9] cmd.exe /C "cd /D D:\work\PT01\code\git_pt01\ESP_IDF\components\esptool_py && C:\Users\INNOTECH\.espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=D:/work/PT01/code/git_pt01/ESP_IDF -D SERIAL_TOOL=C:/Users/INNOTECH/.espressif/python_env/idf5.1_py3.10_env/Scripts/python.exe;;D:/work/PT01/code/git_pt01/ESP_IDF/components/esptool_py/esptool/esptool.py;--chip;esp32s3 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=D:/work/PT01/code/git_pt01/ESP_IDF/examples/mpu6050/sample_project/build -P D:/work/PT01/code/git_pt01/ESP_IDF/components/esptool_py/run_serial_tool.cmake"
esptool.py --chip esp32s3 -p COM4 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size detect 0x0 bootloader/bootloader.bin 0x10000 main.bin 0x8000 partition_table/partition-table.bin 0xd000 ota_data_initial.bin
esptool.py v4.7.0
Serial port COM4
Connecting....
Chip is ESP32-S3 (QFN56) (revision v0.2)
Features: WiFi, BLE, Embedded PSRAM 8MB (AP_3v3)
Crystal is 40MHz
MAC: 48:27:e2:ff:e7:90
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Auto-detected Flash size: 8MB
Flash will be erased from 0x00000000 to 0x00005fff...
Flash will be erased from 0x00010000 to 0x0004efff...
Flash will be erased from 0x00008000 to 0x00008fff...
Flash will be erased from 0x0000d000 to 0x0000efff...
Compressed 20896 bytes to 13264...
Writing at 0x00000000... (100 %)
Wrote 20896 bytes (13264 compressed) at 0x00000000 in 0.6 seconds (effective 275.4 kbit/s)...
Hash of data verified.
Compressed 254512 bytes to 134184...
Writing at 0x00010000... (11 %)
Writing at 0x0001d3d0... (22 %)
Writing at 0x00023cd4... (33 %)
Writing at 0x0002a754... (44 %)
Writing at 0x000306d7... (55 %)
Writing at 0x0003912a... (66 %)
Writing at 0x00040f39... (77 %)
Writing at 0x00046c9d... (88 %)
Writing at 0x0004cb16... (100 %)
Wrote 254512 bytes (134184 compressed) at 0x00010000 in 3.4 seconds (effective 599.4 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 142...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (142 compressed) at 0x00008000 in 0.1 seconds (effective 467.3 kbit/s)...
Hash of data verified.
Compressed 8192 bytes to 31...
Writing at 0x0000d000... (100 %)
Wrote 8192 bytes (31 compressed) at 0x0000d000 in 0.1 seconds (effective 723.5 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
